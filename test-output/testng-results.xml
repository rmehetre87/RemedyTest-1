<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="0" ignored="4" total="11" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Remedy_Suite" duration-ms="214642" started-at="2020-06-04T13:09:31Z" finished-at="2020-06-04T13:13:06Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="214642" started-at="2020-06-04T13:09:31Z" finished-at="2020-06-04T13:13:06Z">
      <class name="com.test.TC_RemedyIncident_Creation">
        <test-method status="PASS" signature="openRemedyTest()[pri:1, instance:com.test.TC_RemedyIncident_Creation@6a4f787b]" name="openRemedyTest" duration-ms="15459" started-at="2020-06-04T13:10:00Z" finished-at="2020-06-04T13:10:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openRemedyTest -->
        <test-method status="PASS" signature="test_createInc(java.util.ArrayList)[pri:2, instance:com.test.TC_RemedyIncident_Creation@6a4f787b]" name="test_createInc" duration-ms="99159" started-at="2020-06-04T13:10:42Z" data-provider="dp_CreateInc" finished-at="2020-06-04T13:12:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Yes, TELEFONICA UK, birajds1, test, dummy testing, 3-Moderate/Limited, 3-Medium, User Service Restoration, TELEFONICA UK, Networks - Network Operations - G-NOC RAN, Field Services, smart metering, cnbas-esxvm-345.uk.pri.o2.com, Field Services Auto-Resolver, RAN, Build, , Business Service, Customer Facing, , , , INC000000509251]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_createInc -->
        <test-method status="SKIP" signature="test_createInc(java.util.ArrayList)[pri:2, instance:com.test.TC_RemedyIncident_Creation@6a4f787b]" name="test_createInc" duration-ms="35" started-at="2020-06-04T13:12:21Z" data-provider="dp_CreateInc" finished-at="2020-06-04T13:12:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[No, TELEFONICA UK, GNOC, test, dummy testing, 4-Minor/Localized, 4-Low, User Service Restoration, TELEFONICA UK, Networks - Infrastructure - IT Infrastructure, Unix Support, gnoc default service, gnoc default service, , Modify, Report, , Business Service, Customer Facing, Network Services, , Phone, INC000000507627]]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Testcase Skipped!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Testcase Skipped!!
at com.test.TC_RemedyIncident_Creation.test_createInc(TC_RemedyIncident_Creation.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_createInc -->
        <test-method status="SKIP" signature="test_createInc(java.util.ArrayList)[pri:2, instance:com.test.TC_RemedyIncident_Creation@6a4f787b]" name="test_createInc" duration-ms="13" started-at="2020-06-04T13:12:21Z" data-provider="dp_CreateInc" finished-at="2020-06-04T13:12:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[No, TELEFONICA UK, birajds1, SMIP TC1, dummy Automation test Incident SMIP TC1, 2-Significant/Large, 2-High, User Service Restoration, TELEFONICA UK, Networks - Network Operations - G-NOC RAN, Field Services, smart metering, smart homes, , Application, Process Failure, Alarm, Business Service, Customer Facing, Smart Meter Service, , Smart Metering, INC000000507462]]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Testcase Skipped!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Testcase Skipped!!
at com.test.TC_RemedyIncident_Creation.test_createInc(TC_RemedyIncident_Creation.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_createInc -->
      </class> <!-- com.test.TC_RemedyIncident_Creation -->
      <class name="com.test.TC_NetCoolRemedyInc">
        <test-method status="PASS" signature="beforeTest(org.testng.ITestContext)[pri:0, instance:com.test.TC_NetCoolRemedyInc@685cb137]" name="beforeTest" is-config="true" duration-ms="15778" started-at="2020-06-04T13:09:31Z" finished-at="2020-06-04T13:09:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@56ccd751]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeTest(org.testng.ITestContext)[pri:0, instance:com.test.TC_RemedyIncident_Creation@6a4f787b]" name="beforeTest" is-config="true" duration-ms="12891" started-at="2020-06-04T13:09:47Z" finished-at="2020-06-04T13:10:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@56ccd751]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="openRemedyTest()[pri:1, instance:com.test.TC_NetCoolRemedyInc@685cb137]" name="openRemedyTest" duration-ms="15552" started-at="2020-06-04T13:10:16Z" finished-at="2020-06-04T13:10:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openRemedyTest -->
        <test-method status="PASS" signature="test_NetcoolIncidentData(java.util.ArrayList, org.testng.ITestContext)[pri:2, instance:com.test.TC_NetCoolRemedyInc@685cb137]" name="test_NetcoolIncidentData" duration-ms="44787" started-at="2020-06-04T13:12:21Z" data-provider="NetcoolIncData" finished-at="2020-06-04T13:13:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Yes, INC000000468490, TELEFONICA UK, Oss, Netcool, NC: No new files on Source - (ArcanumMob), unknown, netpulse_etl, 4-Minor/Localized, 4-Low, Low, Infrastructure Event, Netpulse SPMC, , Assigned, Availability, Data, Import/export data, Application, Software, Analytics and Management Processing, NetPulse - ETL, , Cardinality, Netcool, 7229:netpulse_etl:Availability:arcanumMobNoNewFilesInSource, 20/03/2020 11:06:15, 1587721, , 7229, NetPulse-ETL, arcanumMobNoNewFilesInSource, 3]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@56ccd751]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_NetcoolIncidentData -->
        <test-method status="SKIP" signature="test_NetcoolIncidentData(java.util.ArrayList, org.testng.ITestContext)[pri:2, instance:com.test.TC_NetCoolRemedyInc@685cb137]" name="test_NetcoolIncidentData" duration-ms="5" started-at="2020-06-04T13:13:06Z" data-provider="NetcoolIncData" finished-at="2020-06-04T13:13:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[No, INC000000468499, TELEFONICA UK, Oss, Netcool, NC: No new files on Source - (ArcanumMob), unknown, netpulse_etl, 4-Minor/Localized, 4-Low, Low, Infrastructure Event, Netpulse SPMC, , Assigned, Availability, Data, Import/export data, Application, Software, Analytics and Management Processing, NetPulse - ETL, , Cardinality, Netcool, 7229:netpulse_etl:Availability:arcanumMobNoNewFilesInSource, 20/03/2020 11:06:15, 1587721, , 7229, NetPulse-ETL, arcanumMobNoNewFilesInSource, 3]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[org.testng.TestRunner@56ccd751]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Testcase Skipped!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Testcase Skipped!!
at com.test.TC_NetCoolRemedyInc.test_NetcoolIncidentData(TC_NetCoolRemedyInc.java:122)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_NetcoolIncidentData -->
      </class> <!-- com.test.TC_NetCoolRemedyInc -->
    </test> <!-- Test -->
  </suite> <!-- Remedy_Suite -->
</testng-results>
